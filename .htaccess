
# Enable Gzip/Brotli compression
<IfModule mod_deflate.c>
    # Active compression
    SetOutputFilter DEFLATE
    # Force deflate for mangled headers
    <IfModule mod_setenvif.c>
        <IfModule mod_headers.c>
            SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|{15}$)$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
            RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
        </IfModule>
    </IfModule>

    # Compress all output labeled with one of the following MIME-types
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/vnd.ms-fontobject
    AddOutputFilterByType DEFLATE application/x-font
    AddOutputFilterByType DEFLATE application/x-font-opentype
    AddOutputFilterByType DEFLATE application/x-font-otf
    AddOutputFilterByType DEFLATE application/x-font-truetype
    AddOutputFilterByType DEFLATE application/x-font-ttf
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE font/opentype
    AddOutputFilterByType DEFLATE font/otf
    AddOutputFilterByType DEFLATE font/ttf
    AddOutputFilterByType DEFLATE image/svg+xml
    AddOutputFilterByType DEFLATE image/x-icon
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/javascript
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/xml

    # Remove browser bugs
    BrowserMatch ^Mozilla/4 gzip-only-text/html
    BrowserMatch ^Mozilla/4\.0[678] no-gzip
    BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
    Header append Vary User-Agent
</IfModule>

# Enable Brotli compression if available
<IfModule mod_brotli.c>
    AddOutputFilterByType BROTLI_COMPRESS text/html text/plain text/xml text/css text/javascript application/javascript application/x-javascript application/json application/xml
    AddOutputFilterByType BROTLI_COMPRESS application/rss+xml application/atom+xml
    AddOutputFilterByType BROTLI_COMPRESS image/svg+xml application/x-font-ttf application/x-font-otf
    AddOutputFilterByType BROTLI_COMPRESS application/vnd.ms-fontobject application/x-font-opentype
</IfModule>

# Advanced Cache Control Headers
<IfModule mod_headers.c>
    # JavaScript files
    <FilesMatch "\.(js)$">
        Header set Cache-Control "max-age=31536000, immutable, public"
        Header set ETag "strong"
    </FilesMatch>

    # CSS files
    <FilesMatch "\.(css)$">
        Header set Cache-Control "max-age=31536000, immutable, public"
        Header set ETag "strong"
    </FilesMatch>

    # Image files
    <FilesMatch "\.(jpg|jpeg|png|gif|ico|webp)$">
        Header set Cache-Control "max-age=31536000, immutable, public"
        Header set ETag "strong"
    </FilesMatch>

    # Font files
    <FilesMatch "\.(woff|woff2|ttf|otf|eot)$">
        Header set Cache-Control "max-age=31536000, immutable, public"
        Header set ETag "strong"
    </FilesMatch>

    # SVG files
    <FilesMatch "\.(svg)$">
        Header set Cache-Control "max-age=31536000, immutable, public"
        Header set ETag "strong"
    </FilesMatch>

    # PDF files
    <FilesMatch "\.(pdf)$">
        Header set Cache-Control "max-age=2592000, public"
        Header set ETag "strong"
    </FilesMatch>

    # HTML and XML files - shorter cache for more frequent updates
    <FilesMatch "\.(html|htm|xml)$">
        Header set Cache-Control "max-age=3600, must-revalidate, public"
        Header set ETag "strong"
    </FilesMatch>

    # API responses - no cache
    <FilesMatch "\.(json)$">
        Header set Cache-Control "no-store, no-cache, must-revalidate, max-age=0"
        Header set Pragma "no-cache"
    </FilesMatch>

    # Add Vary header for better CDN caching
    Header append Vary: Accept-Encoding
    Header append Vary: User-Agent
    Header append Vary: Origin
</IfModule>

# CORS Headers
<IfModule mod_headers.c>
    Header set Access-Control-Allow-Origin "*"
</IfModule>

# Security Headers
<IfModule mod_headers.c>
    Header set X-Content-Type-Options "nosniff"
    Header set X-XSS-Protection "1; mode=block"
    Header set X-Frame-Options "SAMEORIGIN"
    Header set Referrer-Policy "strict-origin-when-cross-origin"
    Header set Permissions-Policy "geolocation=(), microphone=(), camera=()"
    Header set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
</IfModule>

# Enable Keep-Alive
<IfModule mod_headers.c>
    Header set Connection keep-alive
    Header set Keep-Alive "timeout=300, max=1000"
</IfModule>

# ETags
FileETag MTime Size

# Redirect all HTTP traffic to HTTPS
<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
</IfModule>

# Handle Single Page Application routing
<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteBase /
    RewriteRule ^index\.html$ - [L]
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-l
    RewriteRule . /index.html [L]
</IfModule>
